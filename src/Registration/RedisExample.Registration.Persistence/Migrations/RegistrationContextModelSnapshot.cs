// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedisExample.Registration.Persistence.Context;

#nullable disable

namespace RedisExample.Registration.Persistence.Migrations
{
    [DbContext(typeof(RegistrationContext))]
    partial class RegistrationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RedisExample.Registration.Domain.Models.Human", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Code")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Human", (string)null);
                });

            modelBuilder.Entity("RedisExample.Registration.Domain.Models.Pet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("Code")
                        .HasColumnType("char(36)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("HumanId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Species")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HumanId");

                    b.ToTable("Pet", (string)null);
                });

            modelBuilder.Entity("RedisExample.Registration.Domain.Models.Vaccine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ActiveIngredient")
                        .HasColumnType("longtext");

                    b.Property<string>("Batch")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("Code")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("PetId")
                        .HasColumnType("bigint");

                    b.Property<string>("Producer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("Vaccine", (string)null);
                });

            modelBuilder.Entity("RedisExample.Registration.Domain.Models.Human", b =>
                {
                    b.OwnsOne("Valuables.Utils.Address", "Address", b1 =>
                        {
                            b1.Property<long>("HumanId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Cep")
                                .HasMaxLength(10)
                                .HasColumnType("varchar(10)")
                                .HasColumnName("Cep");

                            b1.Property<string>("City")
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnName("City");

                            b1.Property<string>("Complement")
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnName("Complement");

                            b1.Property<string>("Neighborhood")
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnName("Neighborhood");

                            b1.Property<string>("Number")
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)")
                                .HasColumnName("Number");

                            b1.Property<string>("Street")
                                .HasMaxLength(256)
                                .HasColumnType("varchar(256)")
                                .HasColumnName("Street");

                            b1.Property<string>("UF")
                                .HasMaxLength(2)
                                .HasColumnType("varchar(2)")
                                .HasColumnName("UF");

                            b1.HasKey("HumanId");

                            b1.ToTable("Human");

                            b1.WithOwner()
                                .HasForeignKey("HumanId");
                        });

                    b.OwnsOne("Valuables.Utils.CPF", "CPF", b1 =>
                        {
                            b1.Property<long>("HumanId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Text")
                                .HasColumnType("longtext")
                                .HasColumnName("CPF");

                            b1.HasKey("HumanId");

                            b1.ToTable("Human");

                            b1.WithOwner()
                                .HasForeignKey("HumanId");
                        });

                    b.OwnsOne("Valuables.Utils.Email", "Email", b1 =>
                        {
                            b1.Property<long>("HumanId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Address")
                                .HasColumnType("longtext")
                                .HasColumnName("Email");

                            b1.HasKey("HumanId");

                            b1.ToTable("Human");

                            b1.WithOwner()
                                .HasForeignKey("HumanId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("CPF")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();
                });

            modelBuilder.Entity("RedisExample.Registration.Domain.Models.Pet", b =>
                {
                    b.HasOne("RedisExample.Registration.Domain.Models.Human", "Human")
                        .WithMany("Pets")
                        .HasForeignKey("HumanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Human");
                });

            modelBuilder.Entity("RedisExample.Registration.Domain.Models.Vaccine", b =>
                {
                    b.HasOne("RedisExample.Registration.Domain.Models.Pet", "Pet")
                        .WithMany("Vaccines")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("RedisExample.Registration.Domain.Models.Human", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("RedisExample.Registration.Domain.Models.Pet", b =>
                {
                    b.Navigation("Vaccines");
                });
#pragma warning restore 612, 618
        }
    }
}
